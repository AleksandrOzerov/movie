{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar Service =\n/*#__PURE__*/\nfunction () {\n  function Service() {\n    _classCallCheck(this, Service);\n\n    this._apiBase = \"https://api.themoviedb.org\";\n  }\n\n  _createClass(Service, [{\n    key: \"getResource\",\n    value: function () {\n      var _getResource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Could not fetch \".concat(url, \", received \").concat(res.status));\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                body = _context.sent;\n                return _context.abrupt(\"return\", body);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getResource(_x) {\n        return _getResource.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getPopularMovie\",\n    value: function () {\n      var _getPopularMovie = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var film;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getResource(\"/3/movie/\".concat(id, \"?api_key=209ac81f9ce8d93ae6683227af60927c\"));\n\n              case 2:\n                film = _context2.sent;\n                return _context2.abrupt(\"return\", this.transformFilm(film));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getPopularMovie(_x2) {\n        return _getPopularMovie.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getTopRated\",\n    value: function () {\n      var _getTopRated = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getResource(\"/3/movie/top_rated?page=1&language=en-US&api_key=209ac81f9ce8d93ae6683227af60927c\");\n\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res.results.map(this.transformFilm).then(function (fi) {\n                  console.log(fi);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getTopRated() {\n        return _getTopRated.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"transformFilm\",\n    value: function transformFilm(film) {\n      return {\n        id: film.id,\n        image: film.poster_path,\n        title: film.title,\n        popularity: film.vote_average,\n        runtime: film.runtime,\n        overview: film.overview\n      };\n    }\n  }]);\n\n  return Service;\n}();\n\nexport { Service as default };\nvar service = new Service();\nservice.getTopRated().then(function (fi) {\n  console.log(fi);\n});","map":{"version":3,"sources":["D:\\pr\\react\\movie\\src\\service\\service.js"],"names":["Service","_apiBase","url","fetch","res","ok","Error","status","json","body","id","getResource","film","transformFilm","results","map","then","fi","console","log","image","poster_path","title","popularity","vote_average","runtime","overview","service","getTopRated"],"mappings":";;;;;IAAqBA,O;;;;;;SACjBC,Q,GAAW,4B;;;;;;;;gDACOC,G;;;;;;;uBACIC,KAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,E;;;AAAjBE,gBAAAA,G;;oBACFA,GAAG,CAACC,E;;;;;sBACE,IAAIC,KAAJ,2BAA6BJ,GAA7B,wBAA8CE,GAAG,CAACG,MAAlD,E;;;;uBAESH,GAAG,CAACI,IAAJ,E;;;AAAbC,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;iDAGWC,E;;;;;;;uBACC,KAAKC,WAAL,oBAA6BD,EAA7B,+C;;;AAAbE,gBAAAA,I;kDACC,KAAKC,aAAL,CAAmBD,IAAnB,C;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIW,KAAKD,WAAL,qF;;;AAAZP,gBAAAA,G;kDACCA,GAAG,CAACU,OAAJ,CAAYC,GAAZ,CAAgB,KAAKF,aAArB,EACNG,IADM,CACD,UAACC,EAAD,EAAM;AACRC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH,iBAHM,C;;;;;;;;;;;;;;;;kCAMGL,I,EAAK;AACf,aAAO;AACHF,QAAAA,EAAE,EAAEE,IAAI,CAACF,EADN;AAEHU,QAAAA,KAAK,EAAER,IAAI,CAACS,WAFT;AAGHC,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAHT;AAIHC,QAAAA,UAAU,EAAEX,IAAI,CAACY,YAJd;AAKHC,QAAAA,OAAO,EAAEb,IAAI,CAACa,OALX;AAMHC,QAAAA,QAAQ,EAAEd,IAAI,CAACc;AANZ,OAAP;AAQH;;;;;;SAjCgB1B,O;AAmCrB,IAAM2B,OAAO,GAAG,IAAI3B,OAAJ,EAAhB;AACA2B,OAAO,CAACC,WAAR,GAAsBZ,IAAtB,CAA2B,UAACC,EAAD,EAAM;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACC,CAFD","sourcesContent":["export default class Service {\r\n    _apiBase = \"https://api.themoviedb.org\";\r\n    async getResource(url){\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n        }\r\n        const body = await res.json();\r\n        return body;\r\n    }\r\n\r\n    async getPopularMovie(id){\r\n        const film = await this.getResource(`/3/movie/${id}?api_key=209ac81f9ce8d93ae6683227af60927c`);\r\n        return this.transformFilm(film)\r\n    }\r\n\r\n    async getTopRated(){\r\n        const res = await this.getResource(`/3/movie/top_rated?page=1&language=en-US&api_key=209ac81f9ce8d93ae6683227af60927c`);\r\n        return res.results.map(this.transformFilm)\r\n        .then((fi)=>{\r\n            console.log(fi)\r\n        })\r\n    }\r\n\r\n    transformFilm(film){\r\n        return {\r\n            id: film.id,\r\n            image: film.poster_path,\r\n            title: film.title,\r\n            popularity: film.vote_average,\r\n            runtime: film.runtime,\r\n            overview: film.overview\r\n          }\r\n    }\r\n}\r\nconst service = new Service();\r\nservice.getTopRated().then((fi)=>{\r\nconsole.log(fi)\r\n})\r\n"]},"metadata":{},"sourceType":"module"}