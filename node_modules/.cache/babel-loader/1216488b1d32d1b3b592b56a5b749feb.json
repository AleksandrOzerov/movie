{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar Service =\n/*#__PURE__*/\nfunction () {\n  function Service() {\n    _classCallCheck(this, Service);\n\n    this._apiBase = \"https://www.themoviedb.org\";\n  }\n\n  _createClass(Service, [{\n    key: \"getResource\",\n    value: function () {\n      var _getResource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Could not fetch \".concat(url, \", received \").concat(res.status));\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                body = _context.sent;\n                return _context.abrupt(\"return\", body);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getResource(_x) {\n        return _getResource.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getPopularMovie\",\n    value: function () {\n      var _getPopularMovie = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.getResource(\"/discover/movie?sort_by=popularity.desc\"));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getPopularMovie() {\n        return _getPopularMovie.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return Service;\n}();\n\nexport { Service as default };\nvar swapi = new Service();\nswapi.getPopularMovie().then(function (body) {\n  console.log(body);\n});","map":{"version":3,"sources":["D:\\pr\\react\\movie\\src\\service\\service.js"],"names":["Service","_apiBase","url","fetch","res","ok","Error","status","json","body","getResource","swapi","getPopularMovie","then","console","log"],"mappings":";;;;;IAAqBA,O;;;;;;SACjBC,Q,GAAW,4B;;;;;;;;gDACOC,G;;;;;;;uBACIC,KAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,E;;;AAAjBE,gBAAAA,G;;oBACFA,GAAG,CAACC,E;;;;;sBACE,IAAIC,KAAJ,2BAA6BJ,GAA7B,wBAA8CE,GAAG,CAACG,MAAlD,E;;;;uBAESH,GAAG,CAACI,IAAJ,E;;;AAAbC,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;kDAIA,KAAKC,WAAL,2C;;;;;;;;;;;;;;;;;;;SAZMV,O;AAgBrB,IAAMW,KAAK,GAAG,IAAIX,OAAJ,EAAd;AAEAW,KAAK,CAACC,eAAN,GAAwBC,IAAxB,CAA6B,UAACJ,IAAD,EAAQ;AACjCK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEH,CAHD","sourcesContent":["export default class Service {\r\n    _apiBase = \"https://www.themoviedb.org\";\r\n    async getResource(url){\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n        }\r\n        const body = await res.json();\r\n        return body;\r\n    }\r\n\r\n    async getPopularMovie(){\r\n        return this.getResource(`/discover/movie?sort_by=popularity.desc`);\r\n    }\r\n}\r\n\r\nconst swapi = new Service();\r\n\r\nswapi.getPopularMovie().then((body)=>{\r\n    console.log(body)\r\n\r\n})"]},"metadata":{},"sourceType":"module"}