{"ast":null,"code":"import _classCallCheck from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\pr\\\\React\\\\movie\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\pr\\\\react\\\\movie\\\\src\\\\components\\\\RandomFilm\\\\RandomFilm.js\";\nimport React, { Component } from \"react\";\nimport Service from \"../../service/service\";\nimport Spinner from \"../Spinner\";\nimport ErrorIndicator from \"../ErrorIndicator\";\nimport \"./randomFilm.css\";\n\nvar RandomFilm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomFilm, _Component);\n\n  function RandomFilm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RandomFilm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RandomFilm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.service = new Service();\n    _this.state = {\n      film: {},\n      loading: true,\n      error: false\n    };\n\n    _this.onFilmLoaded = function (film) {\n      _this.setState({\n        film: film,\n        loading: false\n      });\n    };\n\n    _this.onError = function (err) {\n      _this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RandomFilm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateFilm();\n    }\n  }, {\n    key: \"updateFilm\",\n    value: function updateFilm() {\n      var id = Math.floor(Math.random() * 800) + 1;\n      this.service.getPopularMovie(id).then(this.onFilmLoaded).catch(this.onError);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          film = _this$state.film,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      var hasData = !(loading || error);\n      var errorMessage = error ? React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : null;\n      var spinner = loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : null;\n      var content = hasData ? React.createElement(FilmView, {\n        film: film,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"random-film jumbotron rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, errorMessage, spinner, content);\n    }\n  }]);\n\n  return RandomFilm;\n}(Component);\n\nexport { RandomFilm as default };\n\nvar FilmView = function FilmView(_ref) {\n  var film = _ref.film;\n  var id = film.id,\n      image = film.image,\n      title = film.title,\n      popularity = film.popularity,\n      runtime = film.runtime,\n      overview = film.overview;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"film-image\",\n    src: \"https://image.tmdb.org/t/p/w500/\".concat(image),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, title), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Popularity:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, popularity)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Run Time:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, runtime)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Overview:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, overview)))));\n};","map":{"version":3,"sources":["D:\\pr\\react\\movie\\src\\components\\RandomFilm\\RandomFilm.js"],"names":["React","Component","Service","Spinner","ErrorIndicator","RandomFilm","service","state","film","loading","error","onFilmLoaded","setState","onError","err","updateFilm","id","Math","floor","random","getPopularMovie","then","catch","hasData","errorMessage","spinner","content","FilmView","image","title","popularity","runtime","overview"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Service from \"../../service/service\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport \"./randomFilm.css\";\r\n\r\nexport default class RandomFilm extends Component {\r\n  service = new Service();\r\n\r\n  state = {\r\n    film: {},\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n   \r\n    this.updateFilm();\r\n  }\r\n\r\n  onFilmLoaded = film => {\r\n    this.setState({\r\n      film,\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  onError = err => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  updateFilm() {\r\n    const id = Math.floor(Math.random() * 800) + 1;\r\n    this.service\r\n      .getPopularMovie(id)\r\n      .then(this.onFilmLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  render() {\r\n    const { film, loading, error } = this.state;\r\n\r\n    const hasData =!(loading || error);\r\n    const errorMessage = error ? <ErrorIndicator/> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <FilmView film={film} /> : null;\r\n\r\n    return (\r\n      <div className=\"random-film jumbotron rounded\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst FilmView = ({ film }) => {\r\n  const { id, image, title, popularity, runtime, overview } = film;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <img\r\n          className=\"film-image\"\r\n          src={`https://image.tmdb.org/t/p/w500/${image}`}\r\n        />\r\n      </div>\r\n      <div className='container-fluid'>\r\n        <h4 className=\"h4\">{title}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Popularity:</span>\r\n            <span>{popularity}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Run Time:</span>\r\n            <span>{runtime}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Overview:</span>\r\n            <span>{overview}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}